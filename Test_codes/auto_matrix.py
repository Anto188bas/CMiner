from pynauty import *
from Graph.Graph import MultiDiGraph

g = Graph(8, directed=True)
# g.connect_vertex(0, [0, 1, 4])
# g.connect_vertex(1, [2, 5])
# g.connect_vertex(2, [6])
# g.connect_vertex(3, [2, 7])
# g.connect_vertex(4, [4, 0])
# g.connect_vertex(5, [1, 6])
# g.connect_vertex(6, [2, 4, 7])
# g.connect_vertex(7, [3, 4])

g = Graph(8, directed=True)
g.connect_vertex(0, [4, 1])
g.connect_vertex(1, [5, 3])
g.connect_vertex(2, [6])
g.connect_vertex(3, [7])
g.connect_vertex(4, [0, 6])
g.connect_vertex(5, [1])
g.connect_vertex(6, [2, 7])
g.connect_vertex(7, [3])
gg = MultiDiGraph()
gg.add_node(0, labels=[""])
gg.add_node(1, labels=[""])
gg.add_node(2, labels=[""])
gg.add_node(3, labels=[""])
gg.add_edge(0, 1, type="orange")
gg.add_edge(0, 2, type="yellow")
gg.add_edge(1, 3, type="orange")
gg.add_edge(2, 3, type="yellow")
print(gg.compute_orbits_nodes())


# g = Graph(8, directed=True)
# g.connect_vertex(0, [4, 1, 2])
# g.connect_vertex(1, [5])
# g.connect_vertex(2, [6])
# g.connect_vertex(3, [7])
# g.connect_vertex(4, [0])
# g.connect_vertex(5, [1, 7])
# g.connect_vertex(6, [2, 7])
# g.connect_vertex(7, [3])
print(autgrp(g))
